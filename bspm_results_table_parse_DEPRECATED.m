function [sign, region, hemisphere, BA, extent, stat, x, y, z] = bspm_results_table_parse(table_filename_aal2)

% Parse a XLS Result Table with ROIs generated by bspmview. As a bonus,
% generates and outputs a LaTeX table with the results in the command line
% that you can directly copy-paste into your paper
%
% INPUT:
% table_filename_aal2 = path to the results table exported from bspmview,
%     e.g. '../Neuron manuscript/tables/KL_weights_AAL2.xlsx'
%     To generate:
%     1. open contrast with bspmview, e.g. ccnl_view(...)
%     2. Display -> Preferences -> Anatomical Labeling: AAL2
%     3. Display -> Show Results Table
%     4. Options -> Save Report, make sure it's XLS format
%
% OUTPUT:
% Each of these is an array, one per row:
% sign = +1 or -1 for Positive or Negative, respectively
% region = ROI name from AAL2 atlas if we could find it; from the table o/w
% hemiphere = L or R or ?, depending on whether we found the ROI
% BA = Brodmann area from Talairach atlas; doesn't really work currently
% extent = cluster extenet
% stat = t-statistic
% x, y, z = MNI coordinates
%

% The Talairach atlas with Brodmann areas and whatnot
% got it from http://www.talairach.org/index.html
% BUT... these are all fucked up; or my coordinate transformations are
% fucked too... use http://sprout022.sprout.yale.edu/mni2tal/mni2tal.html
% instead
%
talairach_atlas_filename = '../../libs/talairach/talairach.nii';
tala = load_untouch_nii(talairach_atlas_filename); % load atlas
tala_labels = strsplit(tala.ext.section.edata, '\n'); % get label list from the header
tala_labels(1) = []; % bogus entries
tala_labels(end) = [];

[~, tala_vol, tala_mask] = load_mask(talairach_atlas_filename); % load the actual atlas
assert(max(tala_mask(:)) == numel(tala_labels));

[num, txt, raw] = xlsread(table_filename_aal2);

rows = size(num, 1);
txt = txt(end-rows+1:end, :);

current_sign = NaN;
sign = [];
region = [];
hemisphere = [];
extent = [];
stat = [];
x = [];
y = [];
z = [];

for i=1:rows
    roi_label = txt{i,2};
    roi = aal2_label_to_roi_name(roi_label);
    if isempty(roi)
        roi = roi_label;
        region{i} = roi_label;
        hemisphere{i} = '?';
    else
        s = strsplit(roi_label, '_');
        region{i} = roi;
        hemisphere{i} = s{end};
        roi = [roi, ' (', s{end}, ')'];
    end
    
    x(i) = num(i, 3);
    y(i) = num(i, 4);
    z(i) = num(i, 5);
    extent(i) = num(i, 1);
    stat(i) = num(i, 2);
    if strcmp(txt{i, 1}, 'Positive')
        current_sign = 1;
    elseif strcmp(txt{i, 1}, 'Negative')
        current_sign = -1;
    end
    sign(i) = current_sign;
    
    % get the brodmann area from the talairach atlas
    mni_voxel = [x(i) y(i) z(i)];    
    tal_voxel = icbm_spm2tal(mni_voxel); % first convert from MNI to Talairach space
    %tal_voxel = mni2tal(mni_voxel); % <-- this is wrong... 
    cor = round(tala_vol.mat \ [tal_voxel'; 1]); % convert from talairach voxel to array indices
    if min(cor) < 1
        BA{i} = '????';
    else
        if tala_mask(cor(1), cor(2), cor(3)) == 0
            BA{i} = '???';
        else
            tala_label = tala_labels{tala_mask(cor(1), cor(2), cor(3))};
            k = strfind(tala_label, 'Brodmann area ');
            if isempty(k)
                BA{i} = '??'; % no BA
            else
                BA{i} = tala_label(k + length('Brodmann area '):end);
            end
        end
    end
    
    fprintf('%s & %s &    %s        & %d & %.3f & %d %d %d \\\\\n', txt{i,1}, roi, BA{i}, extent(i), stat(i), x(i), y(i), z(i));
    %break;
end

