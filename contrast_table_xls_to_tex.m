% convert a XLS Result Table with ROIs generated by bspmview into a LaTeX
% table
%

 % path to the results table exported from bspmview 
 % 1. open contrast with bspmview
 % 2. Display -> Preferences -> Anatomical Labeling: AAL2
 % 3. Display -> Show Results Table
 % 4. Options -> Save Report
 %
table_filename_aal2 = '../Neuron manuscript/tables/KL_weights_AAL2.xlsx';

% The Talairach atlas with Brodmann areas and whatnot
% got it from http://www.talairach.org/index.html
% BUT... these are all fucked up; or my coordinate transformations are
% fucked too... use http://sprout022.sprout.yale.edu/mni2tal/mni2tal.html
% instead
%
talairach_atlas_filename = '../../libs/talairach/talairach.nii';
tala = load_untouch_nii(talairach_atlas_filename); % load atlas
tala_labels = strsplit(tala.ext.section.edata, '\n'); % get label list from the header
tala_labels(1) = []; % bogus entries
tala_labels(end) = [];

[~, tala_vol, tala_mask] = load_mask(talairach_atlas_filename); % load the actual atlas
assert(max(tala_mask(:)) == numel(tala_labels));

% Anatomical region name, AAL2 label
% Table 2 from Rolls et al., Implementation of a new parcellation of the orbitofrontal cortex in the
% automated anatomical labeling atlas (NeuroImage, 2015)
%
aal2_labels = {'Precentral gyrus',  'Precentral' ;
'Postcentral gyrus',  'Postcentral' ;
'Rolandic operculum',  'Rolandic_Oper' ;
'Superior frontal gyrus, dorsolateral',  'Frontal_Sup' ;
'Middle frontal gyrus',  'Frontal_Mid' ;
'Inferior frontal gyrus, opercular part',  'Frontal_Inf_Oper' ;
'Inferior frontal gyrus, triangular part',  'Frontal_Inf_Tri' ;
'Superior frontal gyrus, medial',  'Frontal_Sup_Med' ;
'Supplementary motor area',  'Supp_Motor_Area' ;
'Paracentral lobule',  'Paracentral_Lobule' ;
'Superior frontal gyrus, medial orbital',  'Frontal_Med_Orb' ;
'IFG pars orbitalis',  'Frontal_Inf_Orb' ;
'Gyrus rectus',  'Rectus' ;
'Medial orbital gyrus',  'OFCmed' ;
'Anterior orbital gyrus',  'OFCant' ;
'Posterior orbital gyrus',  'OFCpost' ;
'Lateral orbital gyrus',  'OFClat' ;
'Olfactory cortex',  'Olfactory' ;
'Superior temporal gyrus',  'Temporal_Sup' ;
'Heschl''s gyrus',  'Heschl' ;
'Middle temporal gyrus',  'Temporal_Mid' ;
'Inferior temporal gyrus',  'Temporal_Inf' ;
'Superior parietal gyrus',  'Parietal_Sup' ;
'Inferior parietal gyrus, excluding supramarginal and angular gyri',  'Parietal_Inf' ;
'Angular gyrus',  'Angular' ;
'Supramarginal gyrus',  'SupraMarginal',;
'Precuneus',  'Precuneus' ;
'Superior occipital gyrus',  'Occipital_Sup' ;
'Middle occipital gyrus',  'Occipital_Mid' ;
'Inferior occipital gyrus',  'Occipital_Inf' ;
'Cuneus',  'Cuneus' ;
'Calcarine fissure and surrounding cortex',  'Calcarine' ;
'Lingual gyrus',  'Lingual' ;
'Fusiform gyrus',  'Fusiform' ;
'Temporal pole: superior temporal gyrus',  'Temporal_Pole_Sup' ;
'Temporal pole: middle temporal gyrus',  'Temporal_Pole_Mid' ;
'Anterior cingulate \& paracingulate gyri',  'Cingulate_Ant' ;
'Middle cingulate \& paracingulate gyri',  'Cingulate_Mid' ;
'Posterior cingulate gyrus',  'Cingulate_Post' ;
'Hippocampus',  'Hippocampus';
'Parahippocampal gyrus',  'ParaHippocampal' ;
'Insula',  'Insula' ;
'Amygdala',  'Amygdala' ;
'Caudate nucleus',  'Caudate' ;
'Lenticular nucleus, Putamen',  'Putamen' ;
'Lenticular nucleus, Pallidum',  'Pallidum' ;
'Thalamus',  'Thalamus' };

[num, txt, raw] = xlsread(table_filename_aal2);

rows = size(num, 1);
txt = txt(end-rows+1:end, :);

for i=1:rows
    roi_label = txt{i,2};
    roi = [];
    for j=1:size(aal2_labels, 1)
        if startsWith(roi_label, aal2_labels{j, 2})
            roi = aal2_labels{j, 1};
            break;
        end
    end
    if isempty(roi)
        roi = roi_label;
    else
        s = strsplit(roi_label, '_');
        roi = [roi, ' (', s{end}, ')'];
    end
    mni_voxel = [num(i,3), num(i,4), num(i,5)];
    
    % get the brodmann area from the talairach atlas
    tal_voxel = icbm_spm2tal(mni_voxel); % first convert from MNI to Talairach space
    %tal_voxel = mni2tal(mni_voxel); % <-- this is wrong... 
    cor = round(tala_vol.mat \ [tal_voxel'; 1]); % convert from talairach voxel to array indices
    if min(cor) < 1
        BA = '????';
    else
        if tala_mask(cor(1), cor(2), cor(3)) == 0
            BA = '???';
        else
            tala_label = tala_labels{tala_mask(cor(1), cor(2), cor(3))};
            k = strfind(tala_label, 'Brodmann area ');
            if isempty(k)
                BA = '??'; % no BA
            else
                BA = tala_label(k + length('Brodmann area '):end);
            end
        end
    end
    
    fprintf('%s & %s &    %s        & %d & %.3f & %d %d %d \\\\\n', txt{i,1}, roi, BA, num(i,1), num(i,2), mni_voxel(1), mni_voxel(2), mni_voxel(3));
    %break;
end

